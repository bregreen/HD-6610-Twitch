knitr::opts_chunk$set(echo = TRUE)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
library(Freguglia/rTwitchAPI)
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("devtools")
devtools::install_github("Freguglia/rTwitchAPI")
install.packages(c("arsenal", "astsa", "blob", "boot", "brio", "broom", "cachem", "class", "cluster", "colorspace", "cpp11", "credentials", "diffobj", "DT", "farver", "fastmatch", "forecast", "gargle", "gert", "ggplot2", "gh", "googledrive", "googlesheets4", "gss", "gt", "gtsummary", "haven", "highr", "hms", "htmltools", "inline", "isoband", "ISOcodes", "KernSmooth", "KFAS", "knitr", "ks", "later", "lattice", "MASS", "Matrix", "matrixStats", "mgcv", "multicool", "mvtnorm", "network", "nnet", "plot3D", "proxyC", "ps", "quanteda", "R2jags", "Rcpp", "RcppArmadillo", "RcppGSL", "RcppParallel", "RCurl", "readr", "reprex", "Rfast", "rmarkdown", "rstan", "Rttf2pt1", "rversions", "rvest", "spatial", "statnet.common", "stringi", "survival", "table1", "testthat", "tinytex", "tufte", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("arsenal", "astsa", "blob", "boot", "brio", "broom", "cachem", "class", "cluster", "colorspace", "cpp11", "credentials", "diffobj", "DT", "farver", "fastmatch", "forecast", "gargle", "gert", "ggplot2", "gh", "googledrive", "googlesheets4", "gss", "gt", "gtsummary", "haven", "highr", "hms", "htmltools", "inline", "isoband", "ISOcodes", "KernSmooth", "KFAS", "knitr", "ks", "later", "lattice", "MASS", "Matrix", "matrixStats", "mgcv", "multicool", "mvtnorm", "network", "nnet", "plot3D", "proxyC", "ps", "quanteda", "R2jags", "Rcpp", "RcppArmadillo", "RcppGSL", "RcppParallel", "RCurl", "readr", "reprex", "Rfast", "rmarkdown", "rstan", "Rttf2pt1", "rversions", "rvest", "spatial", "statnet.common", "stringi", "survival", "table1", "testthat", "tinytex", "tufte", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("arsenal", "astsa", "blob", "boot", "brio", "broom", "cachem", "class", "cluster", "colorspace", "cpp11", "credentials", "diffobj", "DT", "farver", "fastmatch", "forecast", "gargle", "gert", "ggplot2", "gh", "googledrive", "googlesheets4", "gss", "gt", "gtsummary", "haven", "highr", "hms", "htmltools", "inline", "isoband", "ISOcodes", "KernSmooth", "KFAS", "knitr", "ks", "later", "lattice", "MASS", "Matrix", "matrixStats", "mgcv", "multicool", "mvtnorm", "network", "nnet", "plot3D", "proxyC", "ps", "quanteda", "R2jags", "Rcpp", "RcppArmadillo", "RcppGSL", "RcppParallel", "RCurl", "readr", "reprex", "Rfast", "rmarkdown", "rstan", "Rttf2pt1", "rversions", "rvest", "spatial", "statnet.common", "stringi", "survival", "table1", "testthat", "tinytex", "tufte", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("arsenal", "astsa", "blob", "boot", "brio", "broom", "cachem", "class", "cluster", "colorspace", "cpp11", "credentials", "diffobj", "DT", "farver", "fastmatch", "forecast", "gargle", "gert", "ggplot2", "gh", "googledrive", "googlesheets4", "gss", "gt", "gtsummary", "haven", "highr", "hms", "htmltools", "inline", "isoband", "ISOcodes", "KernSmooth", "KFAS", "knitr", "ks", "later", "lattice", "MASS", "Matrix", "matrixStats", "mgcv", "multicool", "mvtnorm", "network", "nnet", "plot3D", "proxyC", "ps", "quanteda", "R2jags", "Rcpp", "RcppArmadillo", "RcppGSL", "RcppParallel", "RCurl", "readr", "reprex", "Rfast", "rmarkdown", "rstan", "Rttf2pt1", "rversions", "rvest", "spatial", "statnet.common", "stringi", "survival", "table1", "testthat", "tinytex", "tufte", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("arsenal", "astsa", "blob", "boot", "brio", "broom", "cachem", "class", "cluster", "colorspace", "cpp11", "credentials", "diffobj", "DT", "farver", "fastmatch", "forecast", "gargle", "gert", "ggplot2", "gh", "googledrive", "googlesheets4", "gss", "gt", "gtsummary", "haven", "highr", "hms", "htmltools", "inline", "isoband", "ISOcodes", "KernSmooth", "KFAS", "knitr", "ks", "later", "lattice", "MASS", "Matrix", "matrixStats", "mgcv", "multicool", "mvtnorm", "network", "nnet", "plot3D", "proxyC", "ps", "quanteda", "R2jags", "Rcpp", "RcppArmadillo", "RcppGSL", "RcppParallel", "RCurl", "readr", "reprex", "Rfast", "rmarkdown", "rstan", "Rttf2pt1", "rversions", "rvest", "spatial", "statnet.common", "stringi", "survival", "table1", "testthat", "tinytex", "tufte", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("arsenal", "astsa", "blob", "boot", "brio", "broom", "cachem", "class", "cluster", "colorspace", "cpp11", "credentials", "diffobj", "DT", "farver", "fastmatch", "forecast", "gargle", "gert", "ggplot2", "gh", "googledrive", "googlesheets4", "gss", "gt", "gtsummary", "haven", "highr", "hms", "htmltools", "inline", "isoband", "ISOcodes", "KernSmooth", "KFAS", "knitr", "ks", "later", "lattice", "MASS", "Matrix", "matrixStats", "mgcv", "multicool", "mvtnorm", "network", "nnet", "plot3D", "proxyC", "ps", "quanteda", "R2jags", "Rcpp", "RcppArmadillo", "RcppGSL", "RcppParallel", "RCurl", "readr", "reprex", "Rfast", "rmarkdown", "rstan", "Rttf2pt1", "rversions", "rvest", "spatial", "statnet.common", "stringi", "survival", "table1", "testthat", "tinytex", "tufte", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("arsenal", "astsa", "blob", "boot", "brio", "broom", "cachem", "class", "cluster", "colorspace", "cpp11", "credentials", "diffobj", "DT", "farver", "fastmatch", "forecast", "gargle", "gert", "ggplot2", "gh", "googledrive", "googlesheets4", "gss", "gt", "gtsummary", "haven", "highr", "hms", "htmltools", "inline", "isoband", "ISOcodes", "KernSmooth", "KFAS", "knitr", "ks", "later", "lattice", "MASS", "Matrix", "matrixStats", "mgcv", "multicool", "mvtnorm", "network", "nnet", "plot3D", "proxyC", "ps", "quanteda", "R2jags", "Rcpp", "RcppArmadillo", "RcppGSL", "RcppParallel", "RCurl", "readr", "reprex", "Rfast", "rmarkdown", "rstan", "Rttf2pt1", "rversions", "rvest", "spatial", "statnet.common", "stringi", "survival", "table1", "testthat", "tinytex", "tufte", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("arsenal", "astsa", "blob", "boot", "brio", "broom", "cachem", "class", "cluster", "colorspace", "cpp11", "credentials", "diffobj", "DT", "farver", "fastmatch", "forecast", "gargle", "gert", "ggplot2", "gh", "googledrive", "googlesheets4", "gss", "gt", "gtsummary", "haven", "highr", "hms", "htmltools", "inline", "isoband", "ISOcodes", "KernSmooth", "KFAS", "knitr", "ks", "later", "lattice", "MASS", "Matrix", "matrixStats", "mgcv", "multicool", "mvtnorm", "network", "nnet", "plot3D", "proxyC", "ps", "quanteda", "R2jags", "Rcpp", "RcppArmadillo", "RcppGSL", "RcppParallel", "RCurl", "readr", "reprex", "Rfast", "rmarkdown", "rstan", "Rttf2pt1", "rversions", "rvest", "spatial", "statnet.common", "stringi", "survival", "table1", "testthat", "tinytex", "tufte", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("arsenal", "astsa", "blob", "boot", "brio", "broom", "cachem", "class", "cluster", "colorspace", "cpp11", "credentials", "diffobj", "DT", "farver", "fastmatch", "forecast", "gargle", "gert", "ggplot2", "gh", "googledrive", "googlesheets4", "gss", "gt", "gtsummary", "haven", "highr", "hms", "htmltools", "inline", "isoband", "ISOcodes", "KernSmooth", "KFAS", "knitr", "ks", "later", "lattice", "MASS", "Matrix", "matrixStats", "mgcv", "multicool", "mvtnorm", "network", "nnet", "plot3D", "proxyC", "ps", "quanteda", "R2jags", "Rcpp", "RcppArmadillo", "RcppGSL", "RcppParallel", "RCurl", "readr", "reprex", "Rfast", "rmarkdown", "rstan", "Rttf2pt1", "rversions", "rvest", "spatial", "statnet.common", "stringi", "survival", "table1", "testthat", "tinytex", "tufte", "waldo", "withr", "xfun", "zip", "zoo"))
knitr::opts_chunk$set(echo = TRUE)
library(rTwitchAPI)
usethis::edit_r_environ()
```{r TwitchScarpe}
# Setup authentication
twitch_auth()
usethis::edit_r_environ()
knitr::opts_chunk$set(echo = TRUE)
library(rTwitchAPI)
# Setup authentication
twitch_auth()
streams_live$data
# An example request to the streams endpoint
streams_live <- get_streams(first = 15, language = "en")
streams_live$data
print(twitch_auth())
print(twitch_auth())
print(twitch_auth())
GET https://api.twitch.tv/helix/streams?user_login={{QuackityToo}}&first=100&after={{ cursor }}&game_id={{ game_id }}&language={{ en }}
o <- GET(url,
query = query_list(
first=first,
after=after,
before=before,
community_id=community_id,
game_id=game_id,
language=language,
type=type,
user_id=user_id,
user_login=user_login)) %>% content()
get_streams_new <- function(first=20,
after=NULL,
before=NULL,
community_id=NULL,
game_id=NULL,
language=NULL,
type=NULL,
user_id=NULL,
user_login=NULL){
if(!provided_client_id()){}
url <- 'https://tmi.twitch.tv/api/rooms/:43560304173/recent_messages?count=50'
#url <- 'https://api.twitch.tv/helix/streams'
o <- GET(url,
query = query_list(
first=first,
after=after,
before=before,
community_id=community_id,
game_id=game_id,
language=language,
type=type,
user_id=user_id,
user_login=user_login)) %>% content()
if(!is.null(o$error) && o$error=="Unauthorized") stop(o$message)
if(length(o$data)<1) stop("No results for this query parameters.")
o$data <- o$data %>% transpose() %>% simplify_all() %>% dplyr::as_tibble()
return(o)
}
get_streams_new <- function(first=20,
after=NULL,
before=NULL,
community_id=NULL,
game_id=NULL,
language=NULL,
type=NULL,
user_id=NULL,
user_login=NULL){
if(!provided_client_id()){}
url <- 'https://tmi.twitch.tv/api/rooms/:43560304173/recent_messages?count=50'
#url <- 'https://api.twitch.tv/helix/streams'
o <- GET(url,
query = query_list(
first=first,
after=after,
before=before,
community_id=community_id,
game_id=game_id,
language=language,
type=type,
user_id=user_id,
user_login=user_login)) %>% content()
if(!is.null(o$error) && o$error=="Unauthorized") stop(o$message)
if(length(o$data)<1) stop("No results for this query parameters.")
o$data <- o$data %>% transpose() %>% simplify_all() %>% dplyr::as_tibble()
return(o)
}
streams_new <- get_streams_new(first = 15, language = "en")
twitch_auth()
twitch_auth()
get_streams_new <- function(first=20,
after=NULL,
before=NULL,
community_id=NULL,
game_id=NULL,
language=NULL,
type=NULL,
user_id=NULL,
user_login=NULL){
if(!provided_client_id()){}
url <- 'https://tmi.twitch.tv/api/rooms/:43560304173/recent_messages?count=50'
#url <- 'https://api.twitch.tv/helix/streams'
o <- GET(url,
query = query_list(
first=first,
after=after,
before=before,
community_id=community_id,
game_id=game_id,
language=language,
type=type,
user_id=user_id,
user_login=user_login)) %>% content()
if(!is.null(o$error) && o$error=="Unauthorized") stop(o$message)
if(length(o$data)<1) stop("No results for this query parameters.")
o$data <- o$data %>% transpose() %>% simplify_all() %>% dplyr::as_tibble()
return(o)
}
streams_new <- get_streams_new(first = 15, language = "en")
twitch_auth()
query_list <- function(...){
a <- list(...)
as.list(
setNames(
unlist(a), rep(names(a), sapply(a, length))))
}
#Checks if Client-ID is set.
provided_client_id <- function(){
if("Client-ID" %in% names(options()$httr_config$headers)) return(TRUE)
return(FALSE)
}
get_streams_new <- function(first=20,
after=NULL,
before=NULL,
community_id=NULL,
game_id=NULL,
language=NULL,
type=NULL,
user_id=NULL,
user_login=NULL){
if(!provided_client_id()){}
url <- 'https://tmi.twitch.tv/api/rooms/:43560304173/recent_messages?count=50'
#url <- 'https://api.twitch.tv/helix/streams'
o <- GET(url,
query = query_list(
first=first,
after=after,
before=before,
community_id=community_id,
game_id=game_id,
language=language,
type=type,
user_id=user_id,
user_login=user_login)) %>% content()
if(!is.null(o$error) && o$error=="Unauthorized") stop(o$message)
if(length(o$data)<1) stop("No results for this query parameters.")
o$data <- o$data %>% transpose() %>% simplify_all() %>% dplyr::as_tibble()
return(o)
}
streams_new <- get_streams_new(first = 15, language = "en")
twitch_auth()
query_list <- function(...){
a <- list(...)
as.list(
setNames(
unlist(a), rep(names(a), sapply(a, length))))
}
#Checks if Client-ID is set.
provided_client_id <- function(){
if("Client-ID" %in% names(options()$httr_config$headers)) return(TRUE)
return(FALSE)
}
get_streams_new <- function(first=20,
after=NULL,
before=NULL,
community_id=NULL,
game_id=NULL,
language=NULL,
type=NULL,
user_id=NULL,
user_login=NULL){
if(!provided_client_id()){}
url <- 'https://tmi.twitch.tv/api/rooms/:43560304173/recent_messages?count=50'
#url <- 'https://api.twitch.tv/helix/streams'
o <- GET(url,
query = query_list(
first=first,
after=after,
before=before,
community_id=community_id,
game_id=game_id,
language=language,
type=type,
user_id=user_id,
user_login=user_login)) %>% content()
if(!is.null(o$error) && o$error=="Unauthorized") stop(o$message)
if(length(o$data)<1) stop("No results for this query parameters.")
o$data <- o$data %>% transpose() %>% simplify_all() %>% dplyr::as_tibble()
return(o)
}
streams_new <- get_streams_new(first = 15, language = "en")
streams_new <- get_streams_new(first = 15, language = "en")
twitch_auth()
query_list <- function(...){
a <- list(...)
as.list(
setNames(
unlist(a), rep(names(a), sapply(a, length))))
}
#Checks if Client-ID is set.
provided_client_id <- function(){
if("Client-ID" %in% names(options()$httr_config$headers)) return(TRUE)
return(FALSE)
}
get_streams_new <- function(first=20,
after=NULL,
before=NULL,
community_id=NULL,
game_id=NULL,
language=NULL,
type=NULL,
user_id=NULL,
user_login=NULL){
if(!provided_client_id()){}
url <- 'https://api.twitch.tv/api/rooms/:43560304173/recent_messages?count=50'
#url <- 'https://api.twitch.tv/helix/streams'
o <- GET(url,
query = query_list(
first=first,
after=after,
before=before,
community_id=community_id,
game_id=game_id,
language=language,
type=type,
user_id=user_id,
user_login=user_login)) %>% content()
if(!is.null(o$error) && o$error=="Unauthorized") stop(o$message)
if(length(o$data)<1) stop("No results for this query parameters.")
o$data <- o$data %>% transpose() %>% simplify_all() %>% dplyr::as_tibble()
return(o)
}
streams_new <- get_streams_new(first = 15, language = "en")
#install.packages("trackdown")
#library(trackdown)
#install.packages("devtools")
#devtools::install_github("Freguglia/rTwitchAPI")
library(rTwitchAPI)
usethis::edit_r_environ()
make.socket(host = 'irc.chat.twitch.tv', port = 6667,
nickname = 'b_e_green',
token = 'oauth:43rip6j6fgio8n5xly1oum1lph8ikl1',
channel = '#ninja')
make.socket(host = 'irc.chat.twitch.tv', port = 6667)
o <- make.socket(host = 'irc.chat.twitch.tv', port = 6667)
ls(o)
print(o)
o <- make.socket(host = 'irc.chat.twitch.tv', port = 6667)
print(o)
o <- make.socket(host = 'irc.chat.twitch.tv', port = 6667)
o
sock <- socketConnection(host = 'irc.chat.twitch.tv', port = 6667)
#sock <- socketConnection(host = 'irc.chat.twitch.tv', port = 6667)
sock
# Setup authentication
twitch_auth()
#print(twitch_auth()) would show you this info! Bearer is included
# An example request to the streams endpoint
streams_live <- get_streams(first = 15, language = "en")
streams_live$data
#https://api.twitch.tv/v5/videos/<video_id>comments?content_offset_seconds=1000
View(streams_live)
# An example request to the streams endpoint
streams_live <- get_streams(first = 15, language = "en")
# Setup authentication
twitch_auth()
#print(twitch_auth()) would show you this info! Bearer is included
# An example request to the streams endpoint
streams_live <- get_streams(first = 15, language = "en")
streams_live$data
#https://api.twitch.tv/v5/videos/<video_id>comments?content_offset_seconds=1000
